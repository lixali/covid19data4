{"ast":null,"code":"import*as actionTypes from'../actions/actionTypes';import{updateObject}from\"../utility\";var initialState={rows:[],loading:false};export var loadDataSuccess=function loadDataSuccess(state,action){return updateObject(state,{rows:action.rows,loading:false});};export var loadDataFail=function loadDataFail(state,action){return updateObject(state,{loading:false});};export var loadDataStart=function loadDataStart(state,action){return updateObject(state,{loading:true});};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.LOAD_DATA_START:return loadDataStart(state,action);case actionTypes.LOAD_DATA_SUCCESS:return loadDataSuccess(state,action);case actionTypes.LOAD_DATA_FAIL:return loadDataFail(state,action);default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/mac/Documents/From_AWS_Insight/covid19data4/src/store/reducers/loadCountryData.js"],"names":["actionTypes","updateObject","initialState","rows","loading","loadDataSuccess","state","action","loadDataFail","loadDataStart","reducer","type","LOAD_DATA_START","LOAD_DATA_SUCCESS","LOAD_DATA_FAIL"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,OAAQC,YAAR,KAA2B,YAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,IAAI,CAAE,EADW,CAEjBC,OAAO,CAAE,KAFQ,CAArB,CAOA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC9C,MAAON,CAAAA,YAAY,CAACK,KAAD,CAAQ,CACvBH,IAAI,CAAEI,MAAM,CAACJ,IADU,CAEvBC,OAAO,CAAE,KAFc,CAAR,CAAnB,CAIH,CALM,CAOP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAQC,MAAR,CAAmB,CAC3C,MAAON,CAAAA,YAAY,CAACK,KAAD,CAAQ,CACvBF,OAAO,CAAE,KADc,CAAR,CAAnB,CAGH,CAJM,CAOP,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACH,KAAD,CAAQC,MAAR,CAAmB,CAC5C,MAAON,CAAAA,YAAY,CAACK,KAAD,CAAQ,CACvBF,OAAO,CAAE,IADc,CAAR,CAAnB,CAGH,CAJM,CAQP,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCJ,CAAAA,KAAiC,2DAAzBJ,YAAyB,IAAXK,CAAAA,MAAW,2CAE9C,OAAQA,MAAM,CAACI,IAAf,EACI,IAAKX,CAAAA,WAAW,CAACY,eAAjB,CAAkC,MAAOH,CAAAA,aAAa,CAACH,KAAD,CAAQC,MAAR,CAApB,CAClC,IAAKP,CAAAA,WAAW,CAACa,iBAAjB,CAAoC,MAAOR,CAAAA,eAAe,CAACC,KAAD,CAAQC,MAAR,CAAtB,CACpC,IAAKP,CAAAA,WAAW,CAACc,cAAjB,CAAiC,MAAON,CAAAA,YAAY,CAACF,KAAD,CAAQC,MAAR,CAAnB,CAEjC,QACI,MAAOD,CAAAA,KAAP,CANR,CAUH,CAZD,CAcA,cAAeI,CAAAA,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from \"../utility\";\n\nconst initialState = {\n    rows: [],\n    loading: false\n\n};\n\n\nexport const loadDataSuccess = (state, action) => {\n    return updateObject(state, {\n        rows: action.rows,\n        loading: false\n    });\n};\n\nexport const loadDataFail = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    });\n};\n\n\nexport const loadDataStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    });\n};\n\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.LOAD_DATA_START: return loadDataStart(state, action);\n        case actionTypes.LOAD_DATA_SUCCESS: return loadDataSuccess(state, action);\n        case actionTypes.LOAD_DATA_FAIL: return loadDataFail(state, action);\n\n        default:\n            return state;\n\n    }\n\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}