{"ast":null,"code":"import*as actionTypes from'./actionTypes';import axios from'../../axios-data';export var loadDataSuccess=function loadDataSuccess(rows){return{type:actionTypes.LOAD_DATA_SUCCESS,rows:rows};};export var loadDataFail=function loadDataFail(error){return{type:actionTypes.LOAD_DATA_FAIL,error:error};};export var loadDataStart=function loadDataStart(error){return{type:actionTypes.LOAD_DATA_START};};export var loadData=function loadData(){return function(dispatch){dispatch(loadDataStart());axios.get('/countries').then(function(response){dispatch(loadDataSuccess(response.data.data));}).catch(function(error){dispatch(loadDataFail(error));});};};","map":{"version":3,"sources":["/Users/mac/Documents/From_AWS_Insight/covid19data4/src/store/actions/countryData.js"],"names":["actionTypes","axios","loadDataSuccess","rows","type","LOAD_DATA_SUCCESS","loadDataFail","error","LOAD_DATA_FAIL","loadDataStart","LOAD_DATA_START","loadData","dispatch","get","then","response","data","catch"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CACrC,MAAO,CACHC,IAAI,CAAEJ,WAAW,CAACK,iBADf,CAEHF,IAAI,CAAEA,IAFH,CAAP,CAIH,CALM,CAOP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACnC,MAAO,CACHH,IAAI,CAACJ,WAAW,CAACQ,cADd,CAEHD,KAAK,CAAEA,KAFJ,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,KAAD,CAAW,CACpC,MAAO,CACHH,IAAI,CAACJ,WAAW,CAACU,eADd,CAAP,CAGH,CAJM,CAMP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAK,CAEzB,MAAO,UAAAC,QAAQ,CAAI,CACfA,QAAQ,CAACH,aAAa,EAAd,CAAR,CAEAR,KAAK,CAACY,GAAN,CAAU,YAAV,EAA0BC,IAA1B,CAA+B,SAAAC,QAAQ,CAAI,CAEvCH,QAAQ,CAACV,eAAe,CAACa,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAhB,CAAR,CAEH,CAJD,EAIGC,KAJH,CAIS,SAAAV,KAAK,CAAI,CACdK,QAAQ,CAACN,YAAY,CAACC,KAAD,CAAb,CAAR,CACH,CAND,EAOH,CAVD,CAYH,CAdM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-data';\n\nexport const loadDataSuccess = (rows) => {\n    return {\n        type: actionTypes.LOAD_DATA_SUCCESS,\n        rows: rows\n    }\n};\n\nexport const loadDataFail = (error) => {\n    return {\n        type:actionTypes.LOAD_DATA_FAIL,\n        error: error\n    };\n};\n\nexport const loadDataStart = (error) => {\n    return {\n        type:actionTypes.LOAD_DATA_START\n    };\n};\n\nexport const loadData = () =>{\n\n    return dispatch => {\n        dispatch(loadDataStart());\n\n        axios.get('/countries', ).then(response => {\n\n            dispatch(loadDataSuccess(response.data.data));\n\n        }).catch(error => {\n            dispatch(loadDataFail(error));\n        });\n    }\n\n};"]},"metadata":{},"sourceType":"module"}